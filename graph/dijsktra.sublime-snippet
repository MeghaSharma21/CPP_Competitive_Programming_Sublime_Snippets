<snippet>
  <content><![CDATA[
void dijsktra()
{
    int n, m, source;
    cin >> n >> m;
    vector<pair<int, int>> g[n + 1];

    int a, b, wt;
    for (int i = 0; i < m; i++)
    {
        cin >> a >> b >> wt;
        g[a].push_back(make_pair(b, wt));
        g[b].push_back(make_pair(a, wt));
    }
    cin >> source;

    priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
    vector<int> disTo(n + 1, INT_MAX);

    disTo[source] = 0;

    pq.push(make_pair(0, source));

    while (!pq.empty())
    {
        int dist = pq.top().first;
        int prev = pq.top().second;
        pq.pop();

        vector<pair<int, int>>::iterator it;

        for (it = g[prev].begin(); it != g[prev].end(); it++)
        {
            int next = it->first;
            int nextDist = it->second;

            if (disTo[next] > disTo[prev] + nextDist)
            {
                disTo[next] = disTo[prev] + nextDist;
                pq.push(make_pair(disTo[next], next));
            }
        }
    }
    cout << "The distances from source, " << source << ", are : " << endl;
    for (int i = 1; i <= n; i++)
    {
        cout << disTo[i] << " ";
    }
    cout << endl;
}
]]></content>
  <tabTrigger>dijsktra</tabTrigger>
  <description>Dijsktra Algorithm</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>