<snippet>
  <content><![CDATA[
void bellmanFord()
{
    int N, m;
    cin >> N >> m;
    vector<node> edges;
    for (int i = 0; i < m; i++)
    {
        int u, v, wt;
        cin >> u >> v >> wt;
        edges.push_back(node(u, v, wt));
    }
    int src;
    cin >> src;

    int inf = 1e9;
    vector<int> dist(N, inf);
    dist[src] = 0;

    for (int i = 0; i <= N - 1; i++)
    {
        for (auto it : edges)
        {
            if (dist[it.u] + it.wt < dist[it.v])
            {
                dist[it.v] = dist[it.u] + it.wt;
            }
        }
    }
    int fl = 0;
    for (auto it : edges)
    {
        if (dist[it.u] + it.wt < dist[it.v])
        {
            cout << "NegativeCycle" << endl;
            fl = 1;
            break;
        }
    }
    if (!fl)
    {
        for (int i = 0; i < N; i++)
        {
            cout << i << " " << dist[i] << endl;
        }
    }
}
]]></content>
  <tabTrigger>bellmanFord</tabTrigger>
  <description>Bellman Ford Algorithm</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>